<?php

namespace Modules\{{Module}}\Tests\Unit;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\DB;
use PHPUnit\Framework\Attributes\Test;
use Tests\TestCase;

class {{Model}}MigrationTest extends TestCase
{
    use RefreshDatabase;

    // ============================
    // Test struttura tabella
    // ============================
    #[Test]
    public function {{table}}_table_has_expected_columns_and_constraints(): void
    {
        $this->assertTrue(Schema::hasTable('{{table}}'));

        $this->assertTrue(Schema::hasColumns('{{table}}', [
            // Inserisci qui le colonne attese
            'id',
            'created_at',
            'updated_at',
        ]));

        $this->assertDatabaseHasUniqueConstraint('{{table}}', [
            // Inserisci qui le colonne del vincolo unico, se esistono
        ]);
    }

    // ============================
    // Helper: verifica vincolo unico
    // ============================
    protected function assertDatabaseHasUniqueConstraint(string $table, array $columns): void
    {
        $indexes = DB::select("PRAGMA index_list($table)");
        $found = false;

        foreach ($indexes as $index) {
            $info = DB::select("PRAGMA index_info({$index->name})");
            $indexedColumns = array_column($info, 'name');

            if ($index->unique && $indexedColumns === $columns) {
                $found = true;
                break;
            }
        }

        $this->assertTrue($found, 'Vincolo unico mancante su colonne: ' . implode(', ', $columns));
    }
}
